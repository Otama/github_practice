#+OPTIONS: ^:{}
#+OPTIONS: toc:nil

#+LaTeX_CLASS_OPTIONS: [a4paper,twoside,twocolumn]
#+LaTeX_HEADER: \usepackage[normalem]{ulem}

#+TITLE: GitHub入門（チーム演習）
#+AUTHOR: 産業技術大学院大学\\ 中鉢 欣秀
#+DATE: 2016-08-18

* チーム編集の準備
** 演習のための準備
*** 概要
- この演習では，最終的に全員でHTMLによるWebサイトを作ることを目指す
- Webサーバは使わず，スタティックなサイトで構わない
- 可能ならばCSSやJavaScriptを使っても良いが必須ではない

*** リポジトリの作成
- チームができたら代表者1名がGitHubでリポジトリを作成する
  - 名前は「team_project」とする

*** コラボレーターの追加
- 代表者は残りのメンバーを協同作業者（コラボレータ）として追加する
  - [[https://help.github.com/articles/inviting-collaborators-to-a-personal-repository/][Inviting collaborators to a personal repository - User Documentation]]
- 招待されたメンバーには確認のメールが届く
  - これにより，全員がGitHubのリポジトリにpushできるようになる

*** リポジトリのclone
- 全員，リポジトリをローカルにcloneする
  - [[https://help.github.com/articles/cloning-a-repository/][Cloning a repository - User Documentation]]

#+BEGIN_SRC bash
cd ~
git clone $GITHUB_URL
cd team_project
#+END_SRC

* チーム演習
** チーム演習について
*** 課題1: GitHubのIssue/Wikiを学ぶ
- リポジトリのIssue機能を使ってみよう
  - 一人1つIssueを登録する
  - メンバーのIssueに挨拶する（投稿する）
  - 終わったらIssueを閉じてみる
- リポジトリのWikiを使ってみよう
  - Wikiを使ってチームメンバーの自己紹介をしてみよう
- なお，この演習にあまり時間をかけてはならない

*** 課題2: まずは全員1回コミットしよう
[この課題では練習のためmasterブランチをそのまま使う]

- 全員，1つファイルをコミットしてプッシュする
- まず，コミットするファイルを作る
- ファイル名は各自のGitHubのアカウント名＋「.html」とする
- 下記の$MY_FILEをファイル名に置き換えて実行
- コミットメッセージも書く

#+BEGIN_SRC bash
git add $MY_FILE
git commit -m '＜メッセージ＞'
git push
#+END_SRC

- 全員完了したらローカルのmasterブランチを最新にする

#+BEGIN_SRC bash
git pull
#+END_SRC

- ローカルにファイルができているか確認

*** 課題3: ブランチをpushする
- 全員1回，最初のGitHub Flowを成功させよう
- まず，masterが最新版であることを確認
- 「作業の内容がわかりやすい名前」でブランチを作る
- $MY_FILEに，中身を追加してみよう（内容は何でも良い）
- git add/commit/pushを正確に実行しよう
- ブランチが無事pushできたら，GitHubをブラウザで確認する

*** 課題4: いよいよプルリク
- プルリクエストを出してみよう
- 他のメンバーのプルリクエストにコメントしてみよう
- コメントには顔文字なども利用できるので活用してみよう
  - やり方は各自で調べること

*** 課題5: そしてマージ
- マージしてみよう
- この段階でコンフリクトが出ることはないはず
  （同じファイルを編集していない）だが，もし
  マージできない場合は，プルリクエストを削除し，
  課題3からやり直す

*** 課題6: 何回も繰り返す
- 同じファイルに更なる変更を加え，GitHub Flowを回してみよう
- これを最低3回は繰り返したい

*** 課題7: ぼちぼちコンフリクト
- 誰かが空の「index.html」ファイルを作成する
- 全員でindex.htmlを編集してみよう
  - $MY_FILEへのリンクを貼る
- pushしてプルリクエストを出してみる
- 何人かはコンフリクトになるはずだ

*** 課題8: コンフリクトの解消
- コンフリクトが出たメンバーは，それを解消してみよう
- コンフリクトが出なかったメンバーは，コンフリクトが出ているメンバーの
  作業を見る
  - 困っていたら助けてあげよう

*** 課題9: Webサイトを作ってみよう
- チームで内容を相談し，Webサイトを作ってみよう
- index.htmlや$MY_FILE以外にもファイルを追加して
  素敵なWebサイトを作ろう

*** 注意事項
- 実は，GitHubでは，gitコマンドを使わなくても，
  ブラウザベースでファイルのアップロードや編集，コミットの作成などが
  できるが，このことに気がついてはならない
  - 万が一，気がついてしまったものはしょうがないものとする
