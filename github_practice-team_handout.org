#+OPTIONS: ^:{}
#+OPTIONS: toc:nil

#+LaTeX_CLASS_OPTIONS: [a4paper,twoside,twocolumn]
#+LaTeX_HEADER: \usepackage[normalem]{ulem}

#+TITLE: GitHub入門（チーム演習）
#+AUTHOR: 産業技術大学院大学\\ 中鉢 欣秀
#+DATE: 2016-08-18

* TODO GitHubによるチーム開発
** TODO チーム開発
*** チーム編成
- ここまでの演習内容が終わったものは教員かTAに教えること
- 終わったものから順番にチームを編成する
- チームができたら代表者1名がGitHubでリポジトリを作成する
  - 名前は「team_project」とする

*** コラボレーターの追加
- 代表者は残りのメンバーを協同作業者（コラボレータ）として追加する
  - GitHubのリポジトリをブラウザで開く．
  - Settings -> Collaborators を選ぶ
  - メンバーを招待する
  - 招待されたメンバーには確認のメールが届くので，リンクをクリックする

* TODO 演習課題
** ペアで行う GitHub
*** 課題1：ペアで GitHub を使ってみよう
    1. 隣同士でペアを組む
    2. レポジトリを作成する（どちらか一方）
       - =bundle gem= でひな形を作る（初心者は Gem でなくても良い）
    3. レポジトリの Collaborators に登録する
    4. レポジトリに対して、次のことを行う
       - Pull requests を利用してみる
       - Issue を利用してみる
       - Wiki を利用してみる

*** 課題1の続き
    1. Pull request & merge の作業を各自5回以上行う
       - ディスカッションやコードレビューもやってみる
    2. Issue を5個以上登録する
       - Pull request による Issue の close なども試す
    3. Wiki でページを作成する
       - ページを5つ程度作成して、リンクも貼る
	 
** グループで行う GitHub
*** 課題：グループで GitHub (1)
    1. ペアを2つ組み合わせて4人グループを作成する
       - 課題1が終わったペアから順番にグループ編成
    2. 作りたい Gem について相談して仕様を決める
       - テーマはなんでも良い
         - Web API を利用したコマンドラインツールなど
       - ある程度の役割分担も決めておく
    3. レポジトリを作成する（代表者1名）
       - コラボレーターを追加する
    4. 今まで学んだ知識を活用して Gem を開発する

*** 課題：グループで GitHub (2)
    1. グルーブメンバーでGemを共同で作成する
    2. GitHub Flow の実践
    3. Travis CI によるテストの自動化
    4. RubyGems.org への自動ディプロイ
    5. その他、GitHub の各種機能の活用

* TODO 演習の成果物の提出
** TODO アカウントの作成
*** 課題
[[https://github.com/][GitHub]] にアカウントを作成せよ
*** 提出
TODO: Google form

チーム演習

全員が自分のGitHubアカウント名.htmtlを作りコミット
何回か修正を繰り返す

コンフリクトの演習
だれかがindex.htmlを作成
各自がindex.htmlに自分のhtmlファイルへのリンクをはる
マージするとコンフリクトが発生するので
